name: Deploy to Docker

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Stop and remove old containers
        run: |
          docker compose down || true

      - name: Prepare environment
        run: |
          SECRET_KEY=$(mix phx.gen.secret)

          export SECRET_KEY_BASE=${SECRET_KEY}

      - name: Load dependencies to compile code and assets
        run: |
          mix deps.get --only prod
          MIX_ENV=prod mix compile
          MIX_ENV=prod mix assets.deploy

      - name: Generate release
        run: |
          mix phx.gen.release --docker

      - name: Build Docker image
        run: |
          docker compose build --no-cache

      - name: Start containers
        run: |
          docker compose up -d

      - name: Wait for services to be ready
        run: |
          sleep 10

      - name: Run migrations
        run: |
          docker compose exec -T blog mix ecto.migrate

      - name: Check container status
        run: |
          docker compose ps

      - name: Check application logs
        run: |
          docker compose logs blog --tail 50

      - name: Verify deployment
        run: |
          MAX_ATTEMPTS=30
          ATTEMPT=0

          while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
            if curl -f http://localhost:4000 > /dev/null 2>&1; then
              echo "✓ Application is running!"
              exit 0
            fi
            ATTEMPT=$((ATTEMPT + 1))
            echo "Attempt $ATTEMPT/$MAX_ATTEMPTS - Waiting for application..."
            sleep 2
          done

          echo "✗ Application failed to start"
          exit 1

      - name: Show deployment summary
        if: success()
        run: |
          echo "=== Deployment Summary ==="
          echo "Status: ✓ Success"
          echo "Application: Running on port 4000"
          docker compose ps
          echo "================================"

      - name: Show error logs
        if: failure()
        run: |
          echo "=== Error Logs ==="
          docker compose logs
          echo "=================="
